version: '3'

networks:
  dmz:
  backend:

services:
  edge:
    image: traefik
    command: 
      - --api
      - --docker
      - --docker.swarmMode
      - --docker.watch
      - --accessLog
      - --accesslog.fields.defaultmode=keep
      - --accessLog.format=json
      - --traefikLog
      - --traefikLog.format=json
      - --web
      - --web.metrics.prometheus
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dmz
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 127.0.0.1:24224
        tag: edge
        fluentd-async-connect:
        mode: non-blocking
        max-buffer-size: 4m

  web1:
    image: go-webapp1:0.3
    build: ./services
    command: "-word web1"
    hostname: "{{.Service.Name}}-{{.Task.Slot}}-{{.Node.Hostname}}"
    networks:
      - dmz
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 127.0.0.1:24224
        tag: web1
        fluentd-async-connect:
        mode: non-blocking
        max-buffer-size: 4m
    deploy:
      replicas: 1
      labels:
        - "traefik.backend=web"
        - "traefik.weight=1"
        - "traefik.port=3000"
        - "traefik.docker.network=dmz"
        - "traefik.frontend.rule=PathPrefixStrip: /web/"
        - "traefik.backend.loadbalancer.sticky=true"        

  web2:
    image: go-webapp1:0.3
    build: ./services
    command: "-word web2"
    hostname: "{{.Service.Name}}-{{.Task.Slot}}-{{.Node.Hostname}}"
    networks:
      - dmz
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 127.0.0.1:24224
        tag: web2
        fluentd-async-connect:
        mode: non-blocking
        max-buffer-size: 4m
    deploy:
      replicas: 0
      labels:
        - "traefik.backend=web"
        - "traefik.weight=1"
        - "traefik.port=3000"
        - "traefik.docker.network=dmz"
        - "traefik.frontend.rule=PathPrefixStrip: /web/"
        - "traefik.backend.loadbalancer.sticky=true"

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 127.0.0.1:24224
        tag: prometheus
        fluentd-async-connect:
        mode: non-blocking
        max-buffer-size: 4m

  fluent:
    image: fluent/fluent-bit
    ports:
      - 127.0.0.1:24224:24224
    networks:
      - backend

  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock --no-auth
    networks:
      - dmz
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      labels:
        - "traefik.backend=portainer"
        - "traefik.port=9000"
        - "traefik.docker.network=dmz"
        - "traefik.frontend.rule=PathPrefixStrip:/portainer"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 127.0.0.1:24224
        tag: prometheus
        fluentd-async-connect:
        mode: non-blocking
        max-buffer-size: 4m

volumes:
  elasticsearch:
  grafana: